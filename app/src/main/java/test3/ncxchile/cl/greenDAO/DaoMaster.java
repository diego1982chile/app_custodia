package test3.ncxchile.cl.greenDAO;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.identityscope.IdentityScopeType;

import test3.ncxchile.cl.greenDAO.FinalizarActaDao;
import test3.ncxchile.cl.greenDAO.ActaDao;
import test3.ncxchile.cl.greenDAO.VehiculoDataDao;
import test3.ncxchile.cl.greenDAO.VehiculoDao;
import test3.ncxchile.cl.greenDAO.FichaEstadoVisualDao;
import test3.ncxchile.cl.greenDAO.EstadoVisualDao;
import test3.ncxchile.cl.greenDAO.ParqueaderoSummaryDao;
import test3.ncxchile.cl.greenDAO.EspeciasDao;
import test3.ncxchile.cl.greenDAO.ClienteDao;
import test3.ncxchile.cl.greenDAO.ParqueaderoDao;
import test3.ncxchile.cl.greenDAO.AgrupadorDao;
import test3.ncxchile.cl.greenDAO.DireccionDao;
import test3.ncxchile.cl.greenDAO.AutoridadDao;
import test3.ncxchile.cl.greenDAO.PersonaDao;
import test3.ncxchile.cl.greenDAO.CorreosDao;
import test3.ncxchile.cl.greenDAO.TelefonosDao;
import test3.ncxchile.cl.greenDAO.InstitucionDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * Master of DAO (schema version 1000): knows all DAOs.
*/
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 1000;

    /** Creates underlying database table using DAOs. */
    public static void createAllTables(SQLiteDatabase db, boolean ifNotExists) {
        FinalizarActaDao.createTable(db, ifNotExists);
        ActaDao.createTable(db, ifNotExists);
        VehiculoDataDao.createTable(db, ifNotExists);
        VehiculoDao.createTable(db, ifNotExists);
        FichaEstadoVisualDao.createTable(db, ifNotExists);
        EstadoVisualDao.createTable(db, ifNotExists);
        ParqueaderoSummaryDao.createTable(db, ifNotExists);
        EspeciasDao.createTable(db, ifNotExists);
        ClienteDao.createTable(db, ifNotExists);
        ParqueaderoDao.createTable(db, ifNotExists);
        AgrupadorDao.createTable(db, ifNotExists);
        DireccionDao.createTable(db, ifNotExists);
        AutoridadDao.createTable(db, ifNotExists);
        PersonaDao.createTable(db, ifNotExists);
        CorreosDao.createTable(db, ifNotExists);
        TelefonosDao.createTable(db, ifNotExists);
        InstitucionDao.createTable(db, ifNotExists);
    }
    
    /** Drops underlying database table using DAOs. */
    public static void dropAllTables(SQLiteDatabase db, boolean ifExists) {
        FinalizarActaDao.dropTable(db, ifExists);
        ActaDao.dropTable(db, ifExists);
        VehiculoDataDao.dropTable(db, ifExists);
        VehiculoDao.dropTable(db, ifExists);
        FichaEstadoVisualDao.dropTable(db, ifExists);
        EstadoVisualDao.dropTable(db, ifExists);
        ParqueaderoSummaryDao.dropTable(db, ifExists);
        EspeciasDao.dropTable(db, ifExists);
        ClienteDao.dropTable(db, ifExists);
        ParqueaderoDao.dropTable(db, ifExists);
        AgrupadorDao.dropTable(db, ifExists);
        DireccionDao.dropTable(db, ifExists);
        AutoridadDao.dropTable(db, ifExists);
        PersonaDao.dropTable(db, ifExists);
        CorreosDao.dropTable(db, ifExists);
        TelefonosDao.dropTable(db, ifExists);
        InstitucionDao.dropTable(db, ifExists);
    }
    
    public static abstract class OpenHelper extends SQLiteOpenHelper {

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }
    
    /** WARNING: Drops all table on Upgrade! Use only during development. */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            dropAllTables(db, true);
            onCreate(db);
        }
    }

    public DaoMaster(SQLiteDatabase db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(FinalizarActaDao.class);
        registerDaoClass(ActaDao.class);
        registerDaoClass(VehiculoDataDao.class);
        registerDaoClass(VehiculoDao.class);
        registerDaoClass(FichaEstadoVisualDao.class);
        registerDaoClass(EstadoVisualDao.class);
        registerDaoClass(ParqueaderoSummaryDao.class);
        registerDaoClass(EspeciasDao.class);
        registerDaoClass(ClienteDao.class);
        registerDaoClass(ParqueaderoDao.class);
        registerDaoClass(AgrupadorDao.class);
        registerDaoClass(DireccionDao.class);
        registerDaoClass(AutoridadDao.class);
        registerDaoClass(PersonaDao.class);
        registerDaoClass(CorreosDao.class);
        registerDaoClass(TelefonosDao.class);
        registerDaoClass(InstitucionDao.class);
    }
    
    public DaoSession newSession() {
        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }
    
    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(db, type, daoConfigMap);
    }
    
}
