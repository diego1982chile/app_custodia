package test3.ncxchile.cl.greenDAO;

import java.util.List;

import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table Acta.
 */
public class Acta {

    private Long id;
    private String observacion;
    private String causaRetiro;
    private Boolean existImage;
    private Boolean existVideo;
    private java.util.Date fechaCreacion;
    private java.util.Date fechaFirma;
    private Integer idSolicitud;
    private Integer idOt;
    private Integer idGrua;
    private Boolean fiscalia;
    private String nue;
    private String ruc;
    private String parte;
    private String unidadPolicial;
    private java.util.Date fechaParte;
    private Integer servicio;
    private Boolean gruaExterna;
    private String observacionImgenes;
    private String nombreExterno;
    private Integer numeroFactura;
    private Integer montoFactura;
    private String numeroPatente;
    private Boolean cargaInicial;
    private String actaIncautacion;
    private String oficioRemisor;
    private long vehiculoDataID;
    private long direccionID;
    private long autoridadID;
    private long grueroID;
    private long tribunalID;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient ActaDao myDao;

    private VehiculoData vehiculoData;
    private Long vehiculoData__resolvedKey;

    private Direccion direccion;
    private Long direccion__resolvedKey;

    private Autoridad autoridad;
    private Long autoridad__resolvedKey;

    private Persona persona;
    private Long persona__resolvedKey;

    private Institucion institucion;
    private Long institucion__resolvedKey;


    public Acta() {
    }

    public Acta(Long id) {
        this.id = id;
    }

    public Acta(Long id, String observacion, String causaRetiro, Boolean existImage, Boolean existVideo, java.util.Date fechaCreacion, java.util.Date fechaFirma, Integer idSolicitud, Integer idOt, Integer idGrua, Boolean fiscalia, String nue, String ruc, String parte, String unidadPolicial, java.util.Date fechaParte, Integer servicio, Boolean gruaExterna, String observacionImgenes, String nombreExterno, Integer numeroFactura, Integer montoFactura, String numeroPatente, Boolean cargaInicial, String actaIncautacion, String oficioRemisor, long vehiculoDataID, long direccionID, long autoridadID, long grueroID, long tribunalID) {
        this.id = id;
        this.observacion = observacion;
        this.causaRetiro = causaRetiro;
        this.existImage = existImage;
        this.existVideo = existVideo;
        this.fechaCreacion = fechaCreacion;
        this.fechaFirma = fechaFirma;
        this.idSolicitud = idSolicitud;
        this.idOt = idOt;
        this.idGrua = idGrua;
        this.fiscalia = fiscalia;
        this.nue = nue;
        this.ruc = ruc;
        this.parte = parte;
        this.unidadPolicial = unidadPolicial;
        this.fechaParte = fechaParte;
        this.servicio = servicio;
        this.gruaExterna = gruaExterna;
        this.observacionImgenes = observacionImgenes;
        this.nombreExterno = nombreExterno;
        this.numeroFactura = numeroFactura;
        this.montoFactura = montoFactura;
        this.numeroPatente = numeroPatente;
        this.cargaInicial = cargaInicial;
        this.actaIncautacion = actaIncautacion;
        this.oficioRemisor = oficioRemisor;
        this.vehiculoDataID = vehiculoDataID;
        this.direccionID = direccionID;
        this.autoridadID = autoridadID;
        this.grueroID = grueroID;
        this.tribunalID = tribunalID;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getActaDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getObservacion() {
        return observacion;
    }

    public void setObservacion(String observacion) {
        this.observacion = observacion;
    }

    public String getCausaRetiro() {
        return causaRetiro;
    }

    public void setCausaRetiro(String causaRetiro) {
        this.causaRetiro = causaRetiro;
    }

    public Boolean getExistImage() {
        return existImage;
    }

    public void setExistImage(Boolean existImage) {
        this.existImage = existImage;
    }

    public Boolean getExistVideo() {
        return existVideo;
    }

    public void setExistVideo(Boolean existVideo) {
        this.existVideo = existVideo;
    }

    public java.util.Date getFechaCreacion() {
        return fechaCreacion;
    }

    public void setFechaCreacion(java.util.Date fechaCreacion) {
        this.fechaCreacion = fechaCreacion;
    }

    public java.util.Date getFechaFirma() {
        return fechaFirma;
    }

    public void setFechaFirma(java.util.Date fechaFirma) {
        this.fechaFirma = fechaFirma;
    }

    public Integer getIdSolicitud() {
        return idSolicitud;
    }

    public void setIdSolicitud(Integer idSolicitud) {
        this.idSolicitud = idSolicitud;
    }

    public Integer getIdOt() {
        return idOt;
    }

    public void setIdOt(Integer idOt) {
        this.idOt = idOt;
    }

    public Integer getIdGrua() {
        return idGrua;
    }

    public void setIdGrua(Integer idGrua) {
        this.idGrua = idGrua;
    }

    public Boolean getFiscalia() {
        return fiscalia;
    }

    public void setFiscalia(Boolean fiscalia) {
        this.fiscalia = fiscalia;
    }

    public String getNue() {
        return nue;
    }

    public void setNue(String nue) {
        this.nue = nue;
    }

    public String getRuc() {
        return ruc;
    }

    public void setRuc(String ruc) {
        this.ruc = ruc;
    }

    public String getParte() {
        return parte;
    }

    public void setParte(String parte) {
        this.parte = parte;
    }

    public String getUnidadPolicial() {
        return unidadPolicial;
    }

    public void setUnidadPolicial(String unidadPolicial) {
        this.unidadPolicial = unidadPolicial;
    }

    public java.util.Date getFechaParte() {
        return fechaParte;
    }

    public void setFechaParte(java.util.Date fechaParte) {
        this.fechaParte = fechaParte;
    }

    public Integer getServicio() {
        return servicio;
    }

    public void setServicio(Integer servicio) {
        this.servicio = servicio;
    }

    public Boolean getGruaExterna() {
        return gruaExterna;
    }

    public void setGruaExterna(Boolean gruaExterna) {
        this.gruaExterna = gruaExterna;
    }

    public String getObservacionImgenes() {
        return observacionImgenes;
    }

    public void setObservacionImgenes(String observacionImgenes) {
        this.observacionImgenes = observacionImgenes;
    }

    public String getNombreExterno() {
        return nombreExterno;
    }

    public void setNombreExterno(String nombreExterno) {
        this.nombreExterno = nombreExterno;
    }

    public Integer getNumeroFactura() {
        return numeroFactura;
    }

    public void setNumeroFactura(Integer numeroFactura) {
        this.numeroFactura = numeroFactura;
    }

    public Integer getMontoFactura() {
        return montoFactura;
    }

    public void setMontoFactura(Integer montoFactura) {
        this.montoFactura = montoFactura;
    }

    public String getNumeroPatente() {
        return numeroPatente;
    }

    public void setNumeroPatente(String numeroPatente) {
        this.numeroPatente = numeroPatente;
    }

    public Boolean getCargaInicial() {
        return cargaInicial;
    }

    public void setCargaInicial(Boolean cargaInicial) {
        this.cargaInicial = cargaInicial;
    }

    public String getActaIncautacion() {
        return actaIncautacion;
    }

    public void setActaIncautacion(String actaIncautacion) {
        this.actaIncautacion = actaIncautacion;
    }

    public String getOficioRemisor() {
        return oficioRemisor;
    }

    public void setOficioRemisor(String oficioRemisor) {
        this.oficioRemisor = oficioRemisor;
    }

    public long getVehiculoDataID() {
        return vehiculoDataID;
    }

    public void setVehiculoDataID(long vehiculoDataID) {
        this.vehiculoDataID = vehiculoDataID;
    }

    public long getDireccionID() {
        return direccionID;
    }

    public void setDireccionID(long direccionID) {
        this.direccionID = direccionID;
    }

    public long getAutoridadID() {
        return autoridadID;
    }

    public void setAutoridadID(long autoridadID) {
        this.autoridadID = autoridadID;
    }

    public long getGrueroID() {
        return grueroID;
    }

    public void setGrueroID(long grueroID) {
        this.grueroID = grueroID;
    }

    public long getTribunalID() {
        return tribunalID;
    }

    public void setTribunalID(long tribunalID) {
        this.tribunalID = tribunalID;
    }

    /** To-one relationship, resolved on first access. */
    public VehiculoData getVehiculoData() {
        long __key = this.vehiculoDataID;
        if (vehiculoData__resolvedKey == null || !vehiculoData__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            VehiculoDataDao targetDao = daoSession.getVehiculoDataDao();
            VehiculoData vehiculoDataNew = targetDao.load(__key);
            synchronized (this) {
                vehiculoData = vehiculoDataNew;
            	vehiculoData__resolvedKey = __key;
            }
        }
        return vehiculoData;
    }

    public void setVehiculoData(VehiculoData vehiculoData) {
        if (vehiculoData == null) {
            throw new DaoException("To-one property 'vehiculoDataID' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.vehiculoData = vehiculoData;
            vehiculoDataID = vehiculoData.getId();
            vehiculoData__resolvedKey = vehiculoDataID;
        }
    }

    /** To-one relationship, resolved on first access. */
    public Direccion getDireccion() {
        long __key = this.direccionID;
        if (direccion__resolvedKey == null || !direccion__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            DireccionDao targetDao = daoSession.getDireccionDao();
            Direccion direccionNew = targetDao.load(__key);
            synchronized (this) {
                direccion = direccionNew;
            	direccion__resolvedKey = __key;
            }
        }
        return direccion;
    }

    public void setDireccion(Direccion direccion) {
        if (direccion == null) {
            throw new DaoException("To-one property 'direccionID' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.direccion = direccion;
            direccionID = direccion.getId();
            direccion__resolvedKey = direccionID;
        }
    }

    /** To-one relationship, resolved on first access. */
    public Autoridad getAutoridad() {
        long __key = this.autoridadID;
        if (autoridad__resolvedKey == null || !autoridad__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            AutoridadDao targetDao = daoSession.getAutoridadDao();
            Autoridad autoridadNew = targetDao.load(__key);
            synchronized (this) {
                autoridad = autoridadNew;
            	autoridad__resolvedKey = __key;
            }
        }
        return autoridad;
    }

    public void setAutoridad(Autoridad autoridad) {
        if (autoridad == null) {
            throw new DaoException("To-one property 'autoridadID' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.autoridad = autoridad;
            autoridadID = autoridad.getId();
            autoridad__resolvedKey = autoridadID;
        }
    }

    /** To-one relationship, resolved on first access. */
    public Persona getPersona() {
        long __key = this.grueroID;
        if (persona__resolvedKey == null || !persona__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            PersonaDao targetDao = daoSession.getPersonaDao();
            Persona personaNew = targetDao.load(__key);
            synchronized (this) {
                persona = personaNew;
            	persona__resolvedKey = __key;
            }
        }
        return persona;
    }

    public void setPersona(Persona persona) {
        if (persona == null) {
            throw new DaoException("To-one property 'grueroID' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.persona = persona;
            grueroID = persona.getId();
            persona__resolvedKey = grueroID;
        }
    }

    /** To-one relationship, resolved on first access. */
    public Institucion getInstitucion() {
        long __key = this.tribunalID;
        if (institucion__resolvedKey == null || !institucion__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            InstitucionDao targetDao = daoSession.getInstitucionDao();
            Institucion institucionNew = targetDao.load(__key);
            synchronized (this) {
                institucion = institucionNew;
            	institucion__resolvedKey = __key;
            }
        }
        return institucion;
    }

    public void setInstitucion(Institucion institucion) {
        if (institucion == null) {
            throw new DaoException("To-one property 'tribunalID' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.institucion = institucion;
            tribunalID = institucion.getId();
            institucion__resolvedKey = tribunalID;
        }
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

}
